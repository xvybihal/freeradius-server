# Load libfreeradius-radius
load radius
load-dictionary radius

#
#  And using the dictionaries
#
encode-pair Unit-EVS-5-Integer = 1, Unit-EVS-5-Integer = 2
data f5 0d 1a 00 00 00 2c 50 01 00 00 00 01 f5 0d 1a 00 00 00 2c 50 01 00 00 00 02

attribute Unit-Ext-241-Integer = 6809
data Unit-Ext-241-Integer = 6809

encode-pair Unit-Ext-241-Integer = 6809
data f1 07 f1 00 00 1a 99

decode-pair -
data Unit-Ext-241-Integer = 6809

#
#  Encoded as two different top-level attributes.
#
encode-pair Unit-Ext-241-Integer = 6809, Unit-Ext-241-Integer = 2112
data f1 07 f1 00 00 1a 99 f1 07 f1 00 00 08 40

#
#  EVS data types
#
encode-pair Unit-EVS-Integer = 6809
data f2 0c 1a 00 00 2c 50 01 00 00 1a 99

decode-pair -
data Unit-EVS-Integer = 6809

#
#  This is ambiguous, so we do something.  Anything...
#  When we have nested VALUE_PAIRs, we can just follow
#  that format instead of guessing.
#
encode-pair Unit-TLV-Integer = 1, Unit-TLV-Integer = 2
data f1 0f f3 01 06 00 00 00 01 01 06 00 00 00 02

decode-pair -
data Unit-TLV-Integer = 1, Unit-TLV-Integer = 2

#
#  And "long extended" EVS
#
encode-pair Unit-EVS-5-Integer = 1, Unit-EVS-5-Integer = 2
data f5 0d 1a 00 00 00 2c 50 01 00 00 00 01 f5 0d 1a 00 00 00 2c 50 01 00 00 00 02

decode-pair -
data Unit-EVS-5-Integer = 1, Unit-EVS-5-Integer = 2
